{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../axios-order';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        userId: [1, 2]\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        let updatedResponse = response.data.slice(0, 4);\n        this.setState({\n          posts: updatedResponse\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Order, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Order, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","Orders","state","orders","componentDidMount","get","params","userId","then","response","status","updatedResponse","data","slice","setState","posts","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACvB;AACNC,MAAAA,MAAM,EAAE;AADF,KADuB;AAAA;;AAK9BC,EAAAA,iBAAiB,GAAG;AACnBJ,IAAAA,KAAK,CAACK,GAAN,CAAU,4CAAV,EAAwD;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH;AAAV;AAAV,KAAxD,EAAuFC,IAAvF,CAA6FC,QAAQ,IAAI;AACrG,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAIC,eAAe,GAAGF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAtB;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEJ;AAAT,SAAd;AACD;AACF,KALH;AAMA;;AAEDK,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AArB6B;;AAwB/B,eAAef,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../axios-order';\n\nclass Orders extends Component {\n\tstate ={\n\t\torders: []\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get('https://jsonplaceholder.typicode.com/posts', { params: { userId: [1,2] } }).then( response => {\n      if (response.status === 200) {\n        let updatedResponse = response.data.slice(0,4)\n        this.setState({ posts: updatedResponse});\n      }\n    });\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Order />\n\t\t\t\t<Order />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}