{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-order';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport actionCreators from '../../../Store/actions/index';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      street: '',\n      postalCode: '',\n      deliveryMethod: '',\n      loading: false\n    };\n\n    this.cancelCheckoutHandler = event => {\n      event.preventDefault(); // this.setState({ loading: true });\n      // const order ={\n      // \tingredients: this.props.ingredients,\n      // \tprice: this.props.totalPrice,\n      // \tcustomer: {\n      // \t\tname: this.state.name,\n      // \t\tstreet: this.state.street,\n      // \t\tphone: this.state.phone,\n      // \t\tpostalCode: this.state.postalCode,\n      // \t\tdeliverMethod: this.state.deliveryMethod,\n      // \t\temail: this.state.email\n      // \t}\n      // }\n      // axios.post('/orders.json', order).then(response => {\n      // \tthis.setState({loading: false});\n      // \tthis.props.history.push('/');\n      // \tconsole.log(response);\n      // })\n    };\n\n    this.inputChangeHandler = (idnentifier, event) => {\n      const stateObject = {\n        [idnentifier]: event.target.value\n      };\n      this.setState(stateObject);\n    };\n  }\n\n  render() {\n    let spinner = null;\n\n    if (this.props.loading) {\n      spinner = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, spinner, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, \" Please enter your contact detials\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.cancelCheckoutHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'name'),\n      value: this.state.name,\n      name: \"name\",\n      placeholder: \"Your Name\",\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'email'),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"Your Email\",\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'phone'),\n      value: this.state.phone,\n      name: \"phone\",\n      placeholder: \"Your Phone Number\",\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'street'),\n      value: this.state.street,\n      name: \"street\",\n      placeholder: \"Your Street\",\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'postalCode'),\n      value: this.state.postalCode,\n      name: \"postalCode\",\n      placeholder: \"Your PostalCode\",\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"select\",\n      type: \"select\",\n      onChange: this.inputChangeHandler.bind(this, 'deliveryMethod'),\n      value: this.state.deliveryMethod,\n      name: \"deliveryMethod\",\n      placeholder: \"Your Delivery Method\",\n      options: [{\n        value: 'fastest',\n        name: 'Fastest'\n      }, {\n        value: 'slow',\n        name: 'Slowest'\n      }],\n      required: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      text: \"ORDER\",\n      btnType: \"Danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.order.error\n  };\n};\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    trySubmitOrder: () => dispatch(actionCreators.trySubmitOrder(true)),\n    checkoutOrder: data => dispatch(actionCreators.checkoutOrder(data))\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","connect","actionCreators","ContactData","state","name","email","phone","street","postalCode","deliveryMethod","loading","cancelCheckoutHandler","event","preventDefault","inputChangeHandler","idnentifier","stateObject","target","value","setState","render","spinner","props","bind","mapStateToProps","order","error","mapDispatchToprops","dispatch","trySubmitOrder","checkoutOrder","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-order';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport actionCreators from '../../../Store/actions/index';\n\nclass ContactData extends Component {\n\tstate = {\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t\tstreet: '',\n\t\tpostalCode: '',\n\t\tdeliveryMethod: '',\n\t\tloading: false\n\t}\n\n\tcancelCheckoutHandler = (event) => {\n\t\tevent.preventDefault();\n\t\t// this.setState({ loading: true });\n\t\t// const order ={\n\t\t// \tingredients: this.props.ingredients,\n\t\t// \tprice: this.props.totalPrice,\n\t\t// \tcustomer: {\n\t\t// \t\tname: this.state.name,\n\t\t// \t\tstreet: this.state.street,\n\t\t// \t\tphone: this.state.phone,\n\t\t// \t\tpostalCode: this.state.postalCode,\n\t\t// \t\tdeliverMethod: this.state.deliveryMethod,\n\t\t// \t\temail: this.state.email\n\t\t// \t}\n\t\t// }\n\n\t\t// axios.post('/orders.json', order).then(response => {\n\t\t// \tthis.setState({loading: false});\n\t\t// \tthis.props.history.push('/');\n\t\t// \tconsole.log(response);\n\t\t// })\n\t}\n\n\tinputChangeHandler = (idnentifier, event) => {\n\t\tconst stateObject = {[idnentifier]: event.target.value};\n\t\tthis.setState(stateObject);\n\t}\n\n\trender () {\n\t\tlet spinner = null;\n\t\tif(this.props.loading){\n\t\t\tspinner = <Spinner />\n\t\t}\n\t\treturn (\n\t\t\t<div className={classes.ContactData}>\n\t\t\t\t{spinner}\n\t\t\t\t<h1> Please enter your contact detials</h1>\n\t\t\t\t<form onSubmit={this.cancelCheckoutHandler.bind(this)}>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'name')} \n\t\t\t\t\t\t\t\t value={this.state.name} name=\"name\" placeholder=\"Your Name\" required=\"true\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'email')} \n\t\t\t\t\t\t\t\t value={this.state.email} name=\"email\" placeholder=\"Your Email\" required=\"true\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'phone')} \n\t\t\t\t\t\t\t\t value={this.state.phone} name=\"phone\" placeholder=\"Your Phone Number\" required=\"true\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'street')} \n\t\t\t\t\t\t\t\t value={this.state.street} name=\"street\" placeholder=\"Your Street\" required=\"true\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'postalCode')} \n\t\t\t\t\t       value={this.state.postalCode} name=\"postalCode\" placeholder=\"Your PostalCode\" required=\"true\"/>\n\t\t\t\t\t<Input inputtype=\"select\" type=\"select\" onChange={this.inputChangeHandler.bind(this, 'deliveryMethod')} \n\t\t\t\t\t\t\t\t value={this.state.deliveryMethod} name=\"deliveryMethod\" placeholder=\"Your Delivery Method\"\n\t\t\t\t\t\t\t\t options={[{value: 'fastest', name: 'Fastest'}, {value: 'slow', name: 'Slowest'}]} required=\"true\"/>\n\t\t\t\t\t<Button text=\"ORDER\" btnType=\"Danger\"/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tloading: state.order.error\n\t}\n}\n\nconst mapDispatchToprops = dispatch => {\n\treturn {\n\t\ttrySubmitOrder: () => dispatch(actionCreators.trySubmitOrder(true)),\n\t\tcheckoutOrder: (data) => dispatch(actionCreators.checkoutOrder(data))\n\t}\n}\n\nexport default connect(mapStateToProps)(ContactData);"]},"metadata":{},"sourceType":"module"}