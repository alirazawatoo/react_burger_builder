{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.5,\n  bacon: 0.2,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {},\n      totalPrice: 4,\n      purchaseable: false,\n      ordering: false,\n      loading: false\n    };\n\n    this.ingredientsIncementHandler = ingredientName => {\n      let ingredientCount = this.state.ingredients[ingredientName];\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[ingredientName] = ingredientCount + 1;\n      let burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n      this.setState({\n        ingredients: ingredients,\n        totalPrice: burgerPrice,\n        purchaseable: true\n      });\n    };\n\n    this.updateOrderNow = ingredients => {\n      let updatedIngredients = { ...ingredients\n      };\n      let ingredientsSum = 0;\n\n      for (let key in updatedIngredients) {\n        ingredientsSum += updatedIngredients[key];\n      }\n\n      this.setState({\n        purchaseable: ingredientsSum > 0\n      });\n    };\n\n    this.ingredientsDecrementHandler = ingredientName => {\n      let ingredientCount = this.state.ingredients[ingredientName];\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[ingredientName] = ingredientCount - 1;\n      let burgerPrice = this.state.totalPrice - INGREDIENTS_PRICES[ingredientName];\n\n      if (ingredientCount > 0) {\n        this.setState({\n          ingredients: ingredients,\n          totalPrice: burgerPrice\n        });\n      }\n\n      this.updateOrderNow(ingredients);\n    };\n\n    this.orderNowHandler = () => {\n      this.setState({\n        ordering: true\n      });\n    };\n\n    this.orderCancelHandler = () => {\n      this.setState({\n        ordering: false\n      });\n    };\n\n    this.orderContinueHandler = () => {\n      // alert('Your order is recived and we begin preparing !');\n      const queryparams = [];\n\n      for (let i in this.state.ingredients) {\n        queryparams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryparams.push(encodeURIComponent('totalPrice') + '=' + this.state.totalPrice);\n      this.props.history.push({\n        pathname: '/burger-checkout',\n        search: '?' + queryparams.join('&')\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response => {\n      console.log(response);\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      orderCancelHandler: this.orderCancelHandler,\n      orderContinueHandler: this.orderContinueHandler,\n      totalPrice: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.ordering,\n      orderCancelHandler: this.orderCancelHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, orderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      price: this.state.totalPrice,\n      ingredients: this.state.ingredients,\n      incrementHandler: this.ingredientsIncementHandler,\n      decrementHandler: this.ingredientsDecrementHandler,\n      disabledInfo: disabledInfo,\n      purchaseable: this.state.purchaseable,\n      orderNowHandler: this.orderNowHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default WithErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BurgerControls","Modal","OrderSummary","Spinner","axios","WithErrorHandler","INGREDIENTS_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchaseable","ordering","loading","ingredientsIncementHandler","ingredientName","ingredientCount","burgerPrice","setState","updateOrderNow","updatedIngredients","ingredientsSum","key","ingredientsDecrementHandler","orderNowHandler","orderCancelHandler","orderContinueHandler","queryparams","i","push","encodeURIComponent","props","history","pathname","search","join","componentDidMount","get","then","response","console","log","data","render","disabledInfo","orderSummary","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENTS_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.5,\n\tbacon: 0.2,\n\tmeat: 2\n}\n\nclass BurgerBuilder extends Component {\n\tstate = {\n\t\tingredients: {},\n\t\ttotalPrice: 4,\n\t\tpurchaseable: false,\n\t\tordering: false,\n\t\tloading: false\n\t}\n\n\tcomponentDidMount () {\n\t\taxios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response =>{\n\t\t\tconsole.log(response);\n\t\t\tthis.setState({ingredients: response.data});\n\t\t});\n\t}\n\n\tingredientsIncementHandler = (ingredientName) => {\n\t\tlet ingredientCount = this.state.ingredients[ingredientName]\n\t\tlet ingredients = {...this.state.ingredients};\n\t\tingredients[ingredientName] = ingredientCount + 1;\n\t\tlet burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n\t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\t}\n\n\tupdateOrderNow = (ingredients) => {\n\t\tlet updatedIngredients = {...ingredients};\n\t\tlet ingredientsSum = 0;\n\n\t\tfor (let key in updatedIngredients) {\n\t\t\tingredientsSum += updatedIngredients[key]\n\t\t}\n\t\tthis.setState({purchaseable: ingredientsSum > 0})\n\t}\n\n\tingredientsDecrementHandler = (ingredientName) => {\n\t\tlet ingredientCount = this.state.ingredients[ingredientName]\n\t\tlet ingredients = {...this.state.ingredients};\n\t\tingredients[ingredientName] = ingredientCount - 1;\n\t\tlet burgerPrice = this.state.totalPrice - INGREDIENTS_PRICES[ingredientName];\n\n\t\tif (ingredientCount > 0) {\n\t\t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice });\n\t\t}\n\t\tthis.updateOrderNow(ingredients)\n\t}\n\n\torderNowHandler = () => {\n\t\tthis.setState({ ordering: true })\n\t}\n\n\torderCancelHandler = () => {\n\t\tthis.setState({ ordering: false })\n\t}\n\n\torderContinueHandler = () => {\n\t\t// alert('Your order is recived and we begin preparing !');\n\t\t\n\t\tconst queryparams = [];\n\t\tfor (let i in this.state.ingredients) {\n\t\t\tqueryparams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\n\t\t}\n\t\tqueryparams.push(encodeURIComponent('totalPrice') + '=' + this.state.totalPrice)\n\t\tthis.props.history.push({\n\t\t\tpathname: '/burger-checkout',\n\t\t\tsearch: '?' + queryparams.join('&')\n\t\t});\n\t}\n\n\trender () {\n\t\tconst disabledInfo = {\n\t\t\t...this.state.ingredients\n\t\t}\n\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0\n\t\t}\n\t\tlet orderSummary = <OrderSummary \n\t\t\t\t\t\t\t\t\t\t\t\t\tingredients={this.state.ingredients} \n\t\t\t\t\t\t\t\t\t\t\t\t\torderCancelHandler={this.orderCancelHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\torderContinueHandler={this.orderContinueHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalPrice={this.state.totalPrice}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\tif(this.state.loading) {\n\t\t\torderSummary = <Spinner />\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal show={this.state.ordering} orderCancelHandler={this.orderCancelHandler.bind(this)}>\n\t\t\t\t\t{ orderSummary }\n\t\t\t\t</Modal> \n\t\t\t\t<Burger ingredients={this.state.ingredients} />\n\t\t\t\t<BurgerControls \n\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t\tingredients={this.state.ingredients} \n\t\t\t\t\tincrementHandler={this.ingredientsIncementHandler}\n\t\t\t\t\tdecrementHandler={this.ingredientsDecrementHandler}\n\t\t\t\t\tdisabledInfo={disabledInfo}\n\t\t\t\t\tpurchaseable={this.state.purchaseable}\n\t\t\t\t\torderNowHandler={this.orderNowHandler}/>\n\t\t\t</Aux>\n\t\t)\n\t}\n} \n\nexport default WithErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}