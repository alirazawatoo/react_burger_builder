{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.5,\n  bacon: 0.2,\n  meat: 2\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        cheese: 0,\n        bacon: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchaseable: false,\n      ordering: false\n    };\n\n    this.ingredientsIncementHandler = ingredientName => {\n      let ingredientCount = this.state.ingredients[ingredientName];\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[ingredientName] = ingredientCount + 1;\n      let burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n      this.setState({\n        ingredients: ingredients,\n        totalPrice: burgerPrice,\n        purchaseable: true\n      });\n    };\n\n    this.updateOrderNow = ingredients => {\n      let updatedIngredients = { ...ingredients\n      };\n      let ingredientsSum = 0;\n\n      for (let key in updatedIngredients) {\n        ingredientsSum += updatedIngredients[key];\n      }\n\n      this.setState({\n        purchaseable: ingredientsSum > 0\n      });\n    };\n\n    this.ingredientsDecrementHandler = ingredientName => {\n      let ingredientCount = this.state.ingredients[ingredientName];\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[ingredientName] = ingredientCount - 1;\n      let burgerPrice = this.state.totalPrice - INGREDIENTS_PRICES[ingredientName];\n\n      if (ingredientCount > 0) {\n        this.setState({\n          ingredients: ingredients,\n          totalPrice: burgerPrice\n        });\n      }\n\n      this.updateOrderNow(ingredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      price: this.state.totalPrice,\n      ingredients: this.state.ingredients,\n      incrementHandler: this.ingredientsIncementHandler,\n      decrementHandler: this.ingredientsDecrementHandler,\n      disabledInfo: disabledInfo,\n      purchaseable: this.state.purchaseable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BurgerControls","Modal","OrderSummary","INGREDIENTS_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchaseable","ordering","ingredientsIncementHandler","ingredientName","ingredientCount","burgerPrice","setState","updateOrderNow","updatedIngredients","ingredientsSum","key","ingredientsDecrementHandler","render","disabledInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENTS_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.5,\n\tbacon: 0.2,\n\tmeat: 2\n}\n\nclass BurgerBuilder extends Component {\n\tstate = {\n\t\tingredients: {\n\t\t\tsalad: 0,\n\t\t\tcheese: 0,\n\t\t\tbacon: 0,\n\t\t\tmeat: 0\n\t\t},\n\t\ttotalPrice: 4,\n\t\tpurchaseable: false,\n\t\tordering: false\n\t}\n\n\tingredientsIncementHandler = (ingredientName) => {\n\t\tlet ingredientCount = this.state.ingredients[ingredientName]\n\t\tlet ingredients = {...this.state.ingredients};\n\t\tingredients[ingredientName] = ingredientCount + 1;\n\t\tlet burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n\t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\t}\n\n\tupdateOrderNow = (ingredients) => {\n\t\tlet updatedIngredients = {...ingredients};\n\t\tlet ingredientsSum = 0;\n\n\t\tfor (let key in updatedIngredients) {\n\t\t\tingredientsSum += updatedIngredients[key]\n\t\t}\n\t\tthis.setState({purchaseable: ingredientsSum > 0})\n\t}\n\n\tingredientsDecrementHandler = (ingredientName) => {\n\t\tlet ingredientCount = this.state.ingredients[ingredientName]\n\t\tlet ingredients = {...this.state.ingredients};\n\t\tingredients[ingredientName] = ingredientCount - 1;\n\t\tlet burgerPrice = this.state.totalPrice - INGREDIENTS_PRICES[ingredientName];\n\n\t\tif (ingredientCount > 0) {\n\t\t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice });\n\t\t}\n\t\tthis.updateOrderNow(ingredients)\n\t}\n\n\trender () {\n\t\tconst disabledInfo = {\n\t\t\t...this.state.ingredients\n\t\t}\n\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal >\n\t\t\t\t\t<OrderSummary ingredients={this.state.ingredients}/>\n\t\t\t\t</Modal>\n\t\t\t\t<Burger ingredients={this.state.ingredients} />\n\t\t\t\t<BurgerControls \n\t\t\t\t\tprice={this.state.totalPrice}\n\t\t\t\t\tingredients={this.state.ingredients} \n\t\t\t\t\tincrementHandler={this.ingredientsIncementHandler}\n\t\t\t\t\tdecrementHandler={this.ingredientsDecrementHandler}\n\t\t\t\t\tdisabledInfo={disabledInfo}\n\t\t\t\t\tpurchaseable={this.state.purchaseable}/>\n\t\t\t</Aux>\n\t\t)\n\t}\n} \n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}