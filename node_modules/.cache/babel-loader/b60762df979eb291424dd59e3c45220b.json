{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport { connect } from 'react-redux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../Store/actions';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchaseable: false,\n      ordering: false,\n      loading: false\n    };\n\n    this.updateOrderNow = ingredients => {\n      let updatedIngredients = { ...ingredients\n      };\n      let ingredientsSum = 0;\n\n      for (let key in updatedIngredients) {\n        ingredientsSum += updatedIngredients[key];\n      }\n\n      this.setState({\n        purchaseable: ingredientsSum > 0\n      });\n    };\n\n    this.orderNowHandler = () => {\n      this.setState({\n        ordering: true\n      });\n    };\n\n    this.orderCancelHandler = () => {\n      this.setState({\n        ordering: false\n      });\n    };\n\n    this.orderContinueHandler = () => {\n      // alert('Your order is recived and we begin preparing !');\n      const queryparams = [];\n\n      for (let i in this.state.ingredients) {\n        queryparams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]));\n      }\n\n      queryparams.push(encodeURIComponent('totalPrice') + '=' + this.props.totalPrice);\n      this.props.history.push({\n        pathname: '/burger-checkout',\n        search: '?' + queryparams.join('&')\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response => {\n      this.props.setIngredientsHandler(response.data);\n    });\n  } // ingredientsIncementHandler = (ingredientName) => {\n  // \tlet ingredientCount = this.state.ingredients[ingredientName]\n  // \tlet ingredients = {...this.state.ingredients};\n  // \tingredients[ingredientName] = ingredientCount + 1;\n  // \tlet burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n  // \tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n  // }\n\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      orderCancelHandler: this.orderCancelHandler,\n      orderContinueHandler: this.orderContinueHandler,\n      totalPrice: this.props.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.ordering,\n      orderCancelHandler: this.orderCancelHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, orderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.props.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      price: this.props.totalPrice,\n      ingredients: this.props.ingredients,\n      incrementHandler: this.props.ingredientsIncementHandler,\n      decrementHandler: this.props.ingredientsDecrementHandler,\n      disabledInfo: disabledInfo,\n      purchaseable: this.state.purchaseable,\n      orderNowHandler: this.orderNowHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ing.ingredients,\n    totalPrice: state.ing.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIngredientsHandler: data => dispatch({\n      type: actionTypes.SET_INGREDIENTS,\n      ingredients: data\n    }),\n    ingredientsIncementHandler: ingredientName => dispatch({\n      type: actionTypes.INC_INGREDIENTS,\n      ingredientName: ingredientName\n    }),\n    ingredientsDecrementHandler: ingredientName => dispatch({\n      type: actionTypes.DEC_INGREDIENTS,\n      ingredientName: ingredientName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","connect","Burger","BurgerControls","Modal","OrderSummary","Spinner","axios","WithErrorHandler","actionTypes","BurgerBuilder","state","purchaseable","ordering","loading","updateOrderNow","ingredients","updatedIngredients","ingredientsSum","key","setState","orderNowHandler","orderCancelHandler","orderContinueHandler","queryparams","i","push","encodeURIComponent","props","totalPrice","history","pathname","search","join","componentDidMount","get","then","response","setIngredientsHandler","data","render","disabledInfo","orderSummary","bind","ingredientsIncementHandler","ingredientsDecrementHandler","mapStateToProps","ing","mapDispatchToProps","dispatch","type","SET_INGREDIENTS","ingredientName","INC_INGREDIENTS","DEC_INGREDIENTS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport { connect } from 'react-redux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../Store/actions';\n\nclass BurgerBuilder extends Component {\n\tstate = {\n\t\tpurchaseable: false,\n\t\tordering: false,\n\t\tloading: false\n\t}\n\n\tcomponentDidMount () {\n\t\taxios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response =>{\n\t\t\tthis.props.setIngredientsHandler(response.data);\n\t\t});\n\t}\n\n\t// ingredientsIncementHandler = (ingredientName) => {\n\t// \tlet ingredientCount = this.state.ingredients[ingredientName]\n\t// \tlet ingredients = {...this.state.ingredients};\n\t// \tingredients[ingredientName] = ingredientCount + 1;\n\t// \tlet burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n\t// \tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\t// }\n\n\tupdateOrderNow = (ingredients) => {\n\t\tlet updatedIngredients = {...ingredients};\n\t\tlet ingredientsSum = 0;\n\n\t\tfor (let key in updatedIngredients) {\n\t\t\tingredientsSum += updatedIngredients[key]\n\t\t}\n\t\tthis.setState({purchaseable: ingredientsSum > 0})\n\t}\n\n\t// ingredientsDecrementHandler = (ingredientName) => {\n\t// \tlet ingredientCount = this.state.ingredients[ingredientName]\n\t// \tlet ingredients = {...this.state.ingredients};\n\t// \tingredients[ingredientName] = ingredientCount - 1;\n\t// \tlet burgerPrice = this.state.totalPrice - INGREDIENTS_PRICES[ingredientName];\n\n\t// \tif (ingredientCount > 0) {\n\t// \t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice });\n\t// \t}\n\t// \tthis.updateOrderNow(ingredients)\n\t// }\n\n\torderNowHandler = () => {\n\t\tthis.setState({ ordering: true })\n\t}\n\n\torderCancelHandler = () => {\n\t\tthis.setState({ ordering: false })\n\t}\n\n\torderContinueHandler = () => {\n\t\t// alert('Your order is recived and we begin preparing !');\n\t\t\n\t\tconst queryparams = [];\n\t\tfor (let i in this.state.ingredients) {\n\t\t\tqueryparams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]))\n\t\t}\n\t\tqueryparams.push(encodeURIComponent('totalPrice') + '=' + this.props.totalPrice)\n\t\tthis.props.history.push({\n\t\t\tpathname: '/burger-checkout',\n\t\t\tsearch: '?' + queryparams.join('&')\n\t\t});\n\t}\n\n\trender () {\n\t\tconst disabledInfo = {\n\t\t\t...this.props.ingredients\n\t\t}\n\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0\n\t\t}\n\t\tlet orderSummary = <OrderSummary \n\t\t\t\t\t\t\t\t\t\t\t\t\tingredients={this.state.ingredients} \n\t\t\t\t\t\t\t\t\t\t\t\t\torderCancelHandler={this.orderCancelHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\torderContinueHandler={this.orderContinueHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalPrice={this.props.totalPrice}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\tif(this.state.loading) {\n\t\t\torderSummary = <Spinner />\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal show={this.state.ordering} orderCancelHandler={this.orderCancelHandler.bind(this)}>\n\t\t\t\t\t{ orderSummary }\n\t\t\t\t</Modal> \n\t\t\t\t<Burger ingredients={this.props.ingredients} />\n\t\t\t\t<BurgerControls \n\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\tingredients={this.props.ingredients} \n\t\t\t\t\tincrementHandler={this.props.ingredientsIncementHandler}\n\t\t\t\t\tdecrementHandler={this.props.ingredientsDecrementHandler}\n\t\t\t\t\tdisabledInfo={disabledInfo}\n\t\t\t\t\tpurchaseable={this.state.purchaseable}\n\t\t\t\t\torderNowHandler={this.orderNowHandler}/>\n\t\t\t</Aux>\n\t\t)\n\t}\n} \n\nconst mapStateToProps = state => {\n\treturn {\n\t\tingredients: state.ing.ingredients,\n\t\ttotalPrice: state.ing.totalPrice\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetIngredientsHandler: (data) => dispatch({type: actionTypes.SET_INGREDIENTS, ingredients: data}),\n\t\tingredientsIncementHandler: (ingredientName) => dispatch({type: actionTypes.INC_INGREDIENTS, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tingredientName: ingredientName}),\n\t\tingredientsDecrementHandler: (ingredientName) => dispatch({type: actionTypes.DEC_INGREDIENTS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ingredientName: ingredientName})\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}