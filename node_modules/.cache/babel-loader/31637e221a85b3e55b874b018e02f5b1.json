{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport ingredientsReducer from './Store/reducer/burgerBuilder';\nimport orderReducer from './Store/reducer/order';\nconst reducers = combineReducers({\n  ing: ingredientsReducer\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('Middleware Dispatch', action);\n      const result = next(action);\n      console.log('Middleware next state', store.getState());\n      return result;\n    };\n  };\n};\n\nconst store = createStore(reducers, applyMiddleware(logger, thunk));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","serviceWorker","createStore","combineReducers","applyMiddleware","Provider","thunk","ingredientsReducer","orderReducer","reducers","ing","logger","store","next","action","console","log","result","getState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,QAAQ,GAAGN,eAAe,CAAC;AAChCO,EAAAA,GAAG,EAAEH;AAD2B,CAAD,CAAhC;;AAIA,MAAMI,MAAM,GAAGC,KAAK,IAAI;AACvB,SAAOC,IAAI,IAAI;AACd,WAAOC,MAAM,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,MAAnC;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,KAAK,CAACM,QAAN,EAArC;AACA,aAAOD,MAAP;AACA,KALD;AAMA,GAPD;AAQA,CATD;;AAWA,MAAML,KAAK,GAAGV,WAAW,CAACO,QAAD,EAAWL,eAAe,CAACO,MAAD,EAASL,KAAT,CAA1B,CAAzB;AAEAR,QAAQ,CAACqB,MAAT,eACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADF,CADF,CADD,EAQEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport ingredientsReducer from './Store/reducer/burgerBuilder';\nimport orderReducer from './Store/reducer/order';\n\nconst reducers = combineReducers({\n\ting: ingredientsReducer\n})\n\nconst logger = store => {\n\treturn next => {\n\t\treturn action => {\n\t\t\tconsole.log('Middleware Dispatch', action);\n\t\t\tconst result = next(action);\n\t\t\tconsole.log('Middleware next state', store.getState());\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nconst store = createStore(reducers, applyMiddleware(logger, thunk));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t  <React.StrictMode>\n\t    <BrowserRouter>\n\t    \t<App />\n\t    </BrowserRouter>\n\t  </React.StrictMode>\n\t</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}