{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport { connect } from 'react-redux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../Store/actions/index';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ordering: false,\n      loading: false\n    };\n\n    this.orderNowHandler = () => {\n      this.setState({\n        ordering: true\n      });\n    };\n\n    this.orderCancelHandler = () => {\n      this.setState({\n        ordering: false\n      });\n    };\n\n    this.orderContinueHandler = () => {\n      this.props.history.push('/burger-checkout');\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response => {\n      this.props.setIngredientsHandler(response.data);\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.props.ingredients,\n      orderCancelHandler: this.orderCancelHandler,\n      orderContinueHandler: this.orderContinueHandler,\n      totalPrice: this.props.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }\n    });\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.ordering,\n      orderCancelHandler: this.orderCancelHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, orderSummary), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.props.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      price: this.props.totalPrice,\n      ingredients: this.props.ingredients,\n      incrementHandler: this.props.ingredientsIncementHandler,\n      decrementHandler: this.props.ingredientsDecrementHandler,\n      disabledInfo: disabledInfo,\n      purchaseable: this.props.purchaseable,\n      orderNowHandler: this.orderNowHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.ing.ingredients,\n    totalPrice: state.ing.totalPrice,\n    purchaseable: state.ing.purchaseable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIngredientsHandler: data => dispatch({\n      type: actionTypes.SET_INGREDIENTS,\n      ingredients: data\n    }),\n    ingredientsIncementHandler: ingredientName => dispatch(actions.addIngredients(ingredientName)),\n    ingredientsDecrementHandler: ingredientName => dispatch(actions.removeIngredients(ingredientName))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","connect","Burger","BurgerControls","Modal","OrderSummary","Spinner","axios","WithErrorHandler","actions","BurgerBuilder","state","ordering","loading","orderNowHandler","setState","orderCancelHandler","orderContinueHandler","props","history","push","componentDidMount","get","then","response","setIngredientsHandler","data","render","disabledInfo","ingredients","key","orderSummary","totalPrice","bind","ingredientsIncementHandler","ingredientsDecrementHandler","purchaseable","mapStateToProps","ing","mapDispatchToProps","dispatch","type","actionTypes","SET_INGREDIENTS","ingredientName","addIngredients","removeIngredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport { connect } from 'react-redux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport axios from '../../axios-order';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../Store/actions/index';\n\nclass BurgerBuilder extends Component {\n\tstate = {\n\t\tordering: false,\n\t\tloading: false\n\t}\n\n\tcomponentDidMount () {\n\t\taxios.get('https://burger-labz.firebaseio.com/ingredients.json').then(response =>{\n\t\t\tthis.props.setIngredientsHandler(response.data);\n\t\t});\n\t}\n\n\torderNowHandler = () => {\n\t\tthis.setState({ ordering: true })\n\t}\n\n\torderCancelHandler = () => {\n\t\tthis.setState({ ordering: false })\n\t}\n\n\torderContinueHandler = () => {\n\t\tthis.props.history.push('/burger-checkout');\n\t}\n\n\trender () {\n\t\tconst disabledInfo = {\n\t\t\t...this.props.ingredients\n\t\t}\n\n\t\tfor (let key in disabledInfo) {\n\t\t\tdisabledInfo[key] = disabledInfo[key] <= 0\n\t\t}\n\t\tlet orderSummary = <OrderSummary \n\t\t\t\t\t\t\t\t\t\t\t\t\tingredients={this.props.ingredients} \n\t\t\t\t\t\t\t\t\t\t\t\t\torderCancelHandler={this.orderCancelHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\torderContinueHandler={this.orderContinueHandler}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttotalPrice={this.props.totalPrice}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\tif(this.state.loading) {\n\t\t\torderSummary = <Spinner />\n\t\t}\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Modal show={this.state.ordering} orderCancelHandler={this.orderCancelHandler.bind(this)}>\n\t\t\t\t\t{ orderSummary }\n\t\t\t\t</Modal> \n\t\t\t\t<Burger ingredients={this.props.ingredients} />\n\t\t\t\t<BurgerControls \n\t\t\t\t\tprice={this.props.totalPrice}\n\t\t\t\t\tingredients={this.props.ingredients} \n\t\t\t\t\tincrementHandler={this.props.ingredientsIncementHandler}\n\t\t\t\t\tdecrementHandler={this.props.ingredientsDecrementHandler}\n\t\t\t\t\tdisabledInfo={disabledInfo}\n\t\t\t\t\tpurchaseable={this.props.purchaseable}\n\t\t\t\t\torderNowHandler={this.orderNowHandler}/>\n\t\t\t</Aux>\n\t\t)\n\t}\n} \n\nconst mapStateToProps = state => {\n\treturn {\n\t\tingredients: state.ing.ingredients,\n\t\ttotalPrice: state.ing.totalPrice,\n\t\tpurchaseable: state.ing.purchaseable\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetIngredientsHandler: (data) => dispatch({type: actionTypes.SET_INGREDIENTS, ingredients: data}),\n\t\tingredientsIncementHandler: (ingredientName) => dispatch(actions.addIngredients(ingredientName)),\n\t\tingredientsDecrementHandler: (ingredientName) => dispatch(actions.removeIngredients(ingredientName))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}