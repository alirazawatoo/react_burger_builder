{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport { connect } from 'react-redux';\nimport * as actions from '../../Store/actions/index';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    let ordersCollection = null;\n    ordersCollection = this.props.orders.map(order => {\n      return /*#__PURE__*/React.createElement(Order, {\n        customer: order.customer,\n        deliveryMethod: order.deliveryMethod,\n        ingredients: order.ingredients,\n        price: order.price,\n        key: 'order' + order.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, ordersCollection);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    token: state.auth.tokem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","connect","actions","Orders","componentDidMount","props","fetchOrders","render","ordersCollection","orders","map","order","customer","deliveryMethod","ingredients","price","id","mapStateToProps","state","token","auth","tokem","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAE9BK,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWC,WAAX;AACA;;AAEDC,EAAAA,MAAM,GAAE;AACP,QAAIC,gBAAgB,GAAG,IAAvB;AACAA,IAAAA,gBAAgB,GAAG,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAS;AACjD,0BAAO,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA,KAAK,CAACC,QAAvB;AACA,QAAA,cAAc,EAAED,KAAK,CAACE,cADtB;AAEA,QAAA,WAAW,EAAEF,KAAK,CAACG,WAFnB;AAGA,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHb;AAIA,QAAA,GAAG,EAAE,UAAUJ,KAAK,CAACK,EAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKA,KANkB,CAAnB;AAQA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,gBADH,CADD;AAKA;;AArB6B;;AAwB/B,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNT,IAAAA,MAAM,EAAES,KAAK,CAACP,KAAN,CAAYF,MADd;AAENU,IAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC;AAFZ,GAAP;AAIA,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAM;AACLjB,IAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACrB,OAAO,CAACI,WAAR,EAAD;AADtB,GAAN;AAGA,CAJD;;AAKA,eAAeL,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport { connect } from 'react-redux'\nimport * as actions from '../../Store/actions/index';\n\nclass Orders extends Component {\n\n\tcomponentDidMount(){\n\t\tthis.props.fetchOrders()\n\t}\n\n\trender(){\n\t\tlet ordersCollection = null;\n\t\tordersCollection = this.props.orders.map((order)=>{\n\t\t\treturn <Order customer={order.customer} \n\t\t\t\t\t\t\t\t\t\tdeliveryMethod={order.deliveryMethod} \n\t\t\t\t\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\t\t\t\t\tprice={order.price}\n\t\t\t\t\t\t\t\t\t\tkey={'order' + order.id}/>\n\t\t})\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ ordersCollection }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\torders: state.order.orders,\n\t\ttoken: state.auth.tokem\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn{\n\t\tfetchOrders: () => dispatch(actions.fetchOrders())\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);"]},"metadata":{},"sourceType":"module"}