{"ast":null,"code":"import * as actionTypes from '../actions';\nconst intialState = {\n  ingredients: {}\n};\n\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ingredients: action.ingredients\n      };\n\n    case actionTypes.INC_INGREDIENTS:\n      console.log(action.ingredientName);\n      let ingredientCount = state.ingredients[action.ingredientName];\n      let ingredients = { ...this.state.ingredients\n      };\n      ingredients[ingredientName] = ingredientCount + 1;\n      let burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n      this.setState({\n        ingredients: ingredients,\n        totalPrice: burgerPrice,\n        purchaseable: true\n      });\n      return {\n        state\n      };\n\n    case actionTypes.DEC_INGREDIENTS:\n      return {\n        state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/Store/reducer/ingredients.js"],"names":["actionTypes","intialState","ingredients","reducer","state","action","type","SET_INGREDIENTS","INC_INGREDIENTS","console","log","ingredientName","ingredientCount","burgerPrice","INGREDIENTS_PRICES","totalPrice","setState","purchaseable","DEC_INGREDIENTS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAApB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAsBI,MAAtB,KAAiC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAMN,WAAW,CAACO,eAAlB;AACC,aAAO;AACNL,QAAAA,WAAW,EAAEG,MAAM,CAACH;AADd,OAAP;;AAGD,SAAMF,WAAW,CAACQ,eAAlB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,cAAnB;AACA,UAAIC,eAAe,GAAGR,KAAK,CAACF,WAAN,CAAkBG,MAAM,CAACM,cAAzB,CAAtB;AACA,UAAIT,WAAW,GAAG,EAAC,GAAG,KAAKE,KAAL,CAAWF;AAAf,OAAlB;AACAA,MAAAA,WAAW,CAACS,cAAD,CAAX,GAA8BC,eAAe,GAAG,CAAhD;AACA,UAAIC,WAAW,GAAGC,kBAAkB,CAACH,cAAD,CAAlB,GAAqC,KAAKP,KAAL,CAAWW,UAAlE;AACA,WAAKC,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEA,WAAf;AAA4Ba,QAAAA,UAAU,EAAEF,WAAxC;AAAqDI,QAAAA,YAAY,EAAE;AAAnE,OAAd;AACA,aAAO;AACNb,QAAAA;AADM,OAAP;;AAGD,SAAMJ,WAAW,CAACkB,eAAlB;AACC,aAAO;AACNd,QAAAA;AADM,OAAP;;AAGD;AACC,aAAOA,KAAP;AApBF;AAsBA,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions'\n\nconst intialState = {\n\tingredients: {}\n}\n\nconst reducer = (state = intialState, action) => {\n\tswitch(action.type) {\n\t\tcase (actionTypes.SET_INGREDIENTS):\n\t\t\treturn {\n\t\t\t\tingredients: action.ingredients\n\t\t\t}\n\t\tcase (actionTypes.INC_INGREDIENTS):\n\t\t\tconsole.log(action.ingredientName)\n\t\t\tlet ingredientCount = state.ingredients[action.ingredientName]\n\t\t\tlet ingredients = {...this.state.ingredients};\n\t\t\tingredients[ingredientName] = ingredientCount + 1;\n\t\t\tlet burgerPrice = INGREDIENTS_PRICES[ingredientName] + this.state.totalPrice;\n\t\t\tthis.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\t\t\treturn {\n\t\t\t\tstate\n\t\t\t}\n\t\tcase (actionTypes.DEC_INGREDIENTS):\n\t\t\treturn {\n\t\t\t\tstate\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}