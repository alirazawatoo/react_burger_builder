{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/components/Order/Order.js\";\nimport React from 'react';\nimport classes from './Order.css';\n\nconst order = props => {\n  let ingredients = props.ingredients;\n  ingredients.map(ingredient, index => {});\n  console.log(ingredients);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  }, \"Ingredients: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }\n  }, \" Price \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }\n  }, \" $\", props.price), \" \"));\n};\n\nexport default order;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/components/Order/Order.js"],"names":["React","classes","order","props","ingredients","map","ingredient","index","console","log","Order","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACxB,MAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;AACAA,EAAAA,WAAW,CAACC,GAAZ,CAAgBC,UAAhB,EAA4BC,KAAK,IAAI,CAEpC,CAFD;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACS,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWP,KAAK,CAACQ,KAAjB,CAAV,MAHD,CADD;AAOA,CAbD;;AAeA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Order.css';\n\nconst order = (props) => {\n\tlet ingredients = props.ingredients;\n\tingredients.map(ingredient, index => {\n\n\t})\n\tconsole.log(ingredients);\n\treturn (\n\t\t<div className={classes.Order}>\n\t\t\t<p>Ingredients: </p>\n\n\t\t\t<p> Price <strong> ${props.price}</strong> </p>\n\t\t</div>\n\t)\n}\n\nexport default order;"]},"metadata":{},"sourceType":"module"}