{"ast":null,"code":"import * as actionTypes from '../actions';\nconst intialState = {\n  ingredients: {},\n  totalPrice: 4\n};\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.5,\n  bacon: 0.2,\n  meat: 2\n};\n\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: action.ingredients\n      };\n\n    case actionTypes.INC_INGREDIENTS:\n      console.log(action.ingredientName);\n      let ingredientCount = state.ingredients[action.ingredientName];\n      let ingredients = { ...state.ingredients\n      };\n      ingredients[action.ingredientName] = ingredientCount + 1;\n      let burgerPrice = INGREDIENTS_PRICES[action.ingredientName] + this.state.totalPrice; // this.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\n      return {\n        ingredients: ingredients\n      };\n      return {\n        state\n      };\n\n    case actionTypes.DEC_INGREDIENTS:\n      return {\n        state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/Store/reducer/ingredients.js"],"names":["actionTypes","intialState","ingredients","totalPrice","INGREDIENTS_PRICES","salad","cheese","bacon","meat","reducer","state","action","type","SET_INGREDIENTS","INC_INGREDIENTS","console","log","ingredientName","ingredientCount","burgerPrice","DEC_INGREDIENTS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAApB;AAKA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,KAAK,EAAE,GADmB;AAE1BC,EAAAA,MAAM,EAAE,GAFkB;AAG1BC,EAAAA,KAAK,EAAE,GAHmB;AAI1BC,EAAAA,IAAI,EAAE;AAJoB,CAA3B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,WAAT,EAAsBU,MAAtB,KAAiC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAMZ,WAAW,CAACa,eAAlB;AACC,aAAO,EACN,GAAGH,KADG;AAENR,QAAAA,WAAW,EAAES,MAAM,CAACT;AAFd,OAAP;;AAID,SAAMF,WAAW,CAACc,eAAlB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,cAAnB;AACA,UAAIC,eAAe,GAAGR,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACM,cAAzB,CAAtB;AACA,UAAIf,WAAW,GAAG,EAAC,GAAGQ,KAAK,CAACR;AAAV,OAAlB;AACAA,MAAAA,WAAW,CAACS,MAAM,CAACM,cAAR,CAAX,GAAqCC,eAAe,GAAG,CAAvD;AACA,UAAIC,WAAW,GAAGf,kBAAkB,CAACO,MAAM,CAACM,cAAR,CAAlB,GAA4C,KAAKP,KAAL,CAAWP,UAAzE,CALD,CAMC;;AACA,aAAO;AACND,QAAAA,WAAW,EAAEA;AADP,OAAP;AAGA,aAAO;AACNQ,QAAAA;AADM,OAAP;;AAGD,SAAMV,WAAW,CAACoB,eAAlB;AACC,aAAO;AACNV,QAAAA;AADM,OAAP;;AAGD;AACC,aAAOA,KAAP;AAxBF;AA0BA,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions'\n\nconst intialState = {\n\tingredients: {},\n\ttotalPrice: 4\n}\n\nconst INGREDIENTS_PRICES = {\n\tsalad: 0.5,\n\tcheese: 0.5,\n\tbacon: 0.2,\n\tmeat: 2\n}\n\nconst reducer = (state = intialState, action) => {\n\tswitch(action.type) {\n\t\tcase (actionTypes.SET_INGREDIENTS):\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tingredients: action.ingredients\n\t\t\t}\n\t\tcase (actionTypes.INC_INGREDIENTS):\n\t\t\tconsole.log(action.ingredientName)\n\t\t\tlet ingredientCount = state.ingredients[action.ingredientName]\n\t\t\tlet ingredients = {...state.ingredients};\n\t\t\tingredients[action.ingredientName] = ingredientCount + 1;\n\t\t\tlet burgerPrice = INGREDIENTS_PRICES[action.ingredientName] + this.state.totalPrice;\n\t\t\t// this.setState({ ingredients: ingredients, totalPrice: burgerPrice, purchaseable: true });\n\t\t\treturn {\n\t\t\t\tingredients: ingredients\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tstate\n\t\t\t}\n\t\tcase (actionTypes.DEC_INGREDIENTS):\n\t\t\treturn {\n\t\t\t\tstate\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}