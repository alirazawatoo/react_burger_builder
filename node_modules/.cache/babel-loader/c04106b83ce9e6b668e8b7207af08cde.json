{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport axios from '../../axios-order';\nexport const checkoutOrder = data => {\n  return dispatch => {\n    dispatch(trySubmitOrder());\n    axios.post('/orders.json', data).then(response => {// dispatch(submitOrderSuccess(data, response.data.name))\n    }).catch(error => {\n      dispatch(submitOrderFailure(error));\n    });\n  };\n};\nexport const fetchOrders = data => {\n  return dispatch => {\n    dispatch(trySubmitOrder()); // axios.get('/orders.json', data).then(response => {\n    // \t// console.log(response)\n    // \tfor(let key in response.data){\n    // \t\tdispatch(submitOrderSuccess(key, key.name))\n    // \t}\n    // }).catch(error => {\n    // \tdispatch(submitOrderFailure(error))\n    // })\n  };\n};\nexport const submitOrderFailure = error => {\n  return {\n    type: actionTypes.ORDER_SUBMIT_FAILURE,\n    error: error\n  };\n};\nexport const submitOrderSuccess = (order, id) => {\n  return {\n    type: actionTypes.ORDER_SUBMIT_SUCCESS,\n    orders: order,\n    id: id\n  };\n};\nexport const trySubmitOrder = () => {\n  return {\n    type: actionTypes.TRY_SUBMIT\n  };\n};\nexport const orderPurchased = () => {\n  return {\n    type: actionTypes.ORDER_PURCHASED\n  };\n};","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/Store/actions/order.js"],"names":["actionTypes","axios","checkoutOrder","data","dispatch","trySubmitOrder","post","then","response","catch","error","submitOrderFailure","fetchOrders","type","ORDER_SUBMIT_FAILURE","submitOrderSuccess","order","id","ORDER_SUBMIT_SUCCESS","orders","TRY_SUBMIT","orderPurchased","ORDER_PURCHASED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACtC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAW,cAAX,EAA2BH,IAA3B,EAAiCI,IAAjC,CAAsCC,QAAQ,IAAI,CACjD;AACA,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACjBN,MAAAA,QAAQ,CAACO,kBAAkB,CAACD,KAAD,CAAnB,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM;AAYP,OAAO,MAAME,WAAW,GAAIT,IAAD,IAAU;AACpC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR,CADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAMM,kBAAkB,GAAID,KAAD,IAAW;AAC5C,SAAO;AACNG,IAAAA,IAAI,EAAEb,WAAW,CAACc,oBADZ;AAENJ,IAAAA,KAAK,EAAEA;AAFD,GAAP;AAIA,CALM;AAOP,OAAO,MAAMK,kBAAkB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAChD,SAAO;AACNJ,IAAAA,IAAI,EAAEb,WAAW,CAACkB,oBADZ;AAENC,IAAAA,MAAM,EAAEH,KAFF;AAGNC,IAAAA,EAAE,EAAEA;AAHE,GAAP;AAKA,CANM;AAQP,OAAO,MAAMZ,cAAc,GAAG,MAAM;AACnC,SAAO;AACNQ,IAAAA,IAAI,EAAEb,WAAW,CAACoB;AADZ,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,MAAM;AACnC,SAAO;AACNR,IAAAA,IAAI,EAAEb,WAAW,CAACsB;AADZ,GAAP;AAGA,CAJM","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport axios from '../../axios-order';\n\nexport const checkoutOrder = (data) => {\n\treturn dispatch => {\n\t\tdispatch(trySubmitOrder())\n\t\taxios.post('/orders.json', data).then(response => {\n\t\t\t// dispatch(submitOrderSuccess(data, response.data.name))\n\t\t}).catch(error => {\n\t\t\tdispatch(submitOrderFailure(error))\n\t\t})\n\t}\n}\n\n\nexport const fetchOrders = (data) => {\n\treturn dispatch => {\n\t\tdispatch(trySubmitOrder())\n\t\t// axios.get('/orders.json', data).then(response => {\n\t\t// \t// console.log(response)\n\t\t// \tfor(let key in response.data){\n\t\t// \t\tdispatch(submitOrderSuccess(key, key.name))\n\t\t// \t}\n\t\t// }).catch(error => {\n\t\t// \tdispatch(submitOrderFailure(error))\n\t\t// })\n\t}\n}\n\nexport const submitOrderFailure = (error) => {\n\treturn {\n\t\ttype: actionTypes.ORDER_SUBMIT_FAILURE,\n\t\terror: error\n\t}\n}\n\nexport const submitOrderSuccess = (order, id) => {\n\treturn {\n\t\ttype: actionTypes.ORDER_SUBMIT_SUCCESS,\n\t\torders: order,\n\t\tid: id\n\t}\n}\n\nexport const trySubmitOrder = () => {\n\treturn {\n\t\ttype: actionTypes.TRY_SUBMIT\n\t}\n}\n\nexport const orderPurchased = () => {\n\treturn {\n\t\ttype: actionTypes.ORDER_PURCHASED\n\t}\n}"]},"metadata":{},"sourceType":"module"}