{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../components/UI/Input/FormInput';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.css';\nimport * as actionCreators from '../../Store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Mail Address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignUp: true\n    };\n\n    this.inputChangeHandler = (field, event) => {\n      const updatedControls = { ...this.state.controls,\n        [field]: { ...this.state.controls[field],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[field].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.onformSubmit = event => {\n      event.preventDefault();\n      let email = this.state.controls.email.value;\n      let password = this.state.controls.password.value;\n      this.props.submitFormHandler(email, password, this.state.isSignUp);\n    };\n\n    this.isSinupChangeHandler = event => {\n      event.preventDefault();\n      let isSignUp = this.state.isSignUp;\n      this.setState({\n        isSignUp: !isSignUp\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    let formElements = [];\n\n    for (let key in this.state.controls) {\n      formElements.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onformSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }, formElements.map(field => /*#__PURE__*/React.createElement(Input, {\n      key: field.id,\n      inputtype: field.config.elementType,\n      elementConfig: field.config.elementConfig,\n      value: field.config.value,\n      invalid: !field.config.valid,\n      shouldValidate: field.config.validation,\n      touched: field.config.touched,\n      change: this.inputChangeHandler.bind(this, field.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      text: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }\n    }, this.props.isAuth ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 27\n      }\n    }) : null, this.props.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }) : null, form, /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Danger\",\n      text: \"Switch To \" + (this.state.isSignUp ? 'Login' : 'Singup'),\n      click: this.isSinupChangeHandler.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    isAuth: state.auth.token\n  };\n};\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    submitFormHandler: (email, password, isSignUp) => dispatch(actionCreators.formSubmitHandler(email, password, isSignUp))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Auth);","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Redirect","Input","Button","classes","actionCreators","Spinner","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","inputChangeHandler","field","event","updatedControls","target","checkValidity","setState","onformSubmit","preventDefault","props","submitFormHandler","isSinupChangeHandler","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","render","formElements","key","push","id","config","form","map","bind","isAuth","loading","mapStateToProps","auth","token","mapDispatchToprops","dispatch","formSubmitHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\nimport Input from '../../components/UI/Input/FormInput';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.css';\nimport * as actionCreators from '../../Store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Auth extends Component {\n\tstate = {\n\t\tcontrols: {\n\t\t\temail: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\tplaceholder: 'Mail Address'\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true, \n\t\t\t\t\tisEmail: true\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\telementType: 'input',\n\t\t\t\telementConfig: {\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\tplaceholder: 'Password'\n\t\t\t\t},\n\t\t\t\tvalue: '',\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true, \n\t\t\t\t\tminLength: 6\n\t\t\t\t},\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false\n\t\t\t}\n\t\t},\n\t\tisSignUp: true\n\t}\n\n\tinputChangeHandler = (field, event) => {\n\t\tconst updatedControls = {\n\t\t\t...this.state.controls,\n\t\t\t[field]: {\n\t\t\t\t...this.state.controls[field],\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: this.checkValidity(event.target.value, this.state.controls[field].validation),\n\t\t\t\ttouched: true\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({controls: updatedControls})\n\t}\n\n\tcheckValidity(value, rules) {\n\t\tlet isValid = true;\n\n\t\tif(!rules) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif(rules.required){\n\t\t\tisValid = value.trim() !== '' && isValid\n\t\t}\n\n\t\tif(rules.minLength) {\n\t\t\tisValid = value.length >= rules.minLength && isValid\n\t\t}\n\n\t\tif(rules.maxLength) {\n\t\t\tisValid = value.length <= rules.maxLength && isValid\n\t\t}\n\n\t\tif(rules.isEmail) {\n\t\t\tconst pattern = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\t\t\tisValid = pattern.test(value) && isValid\n\t\t}\n\n\t\tif(rules.isNumeric) {\n\t\t\tconst pattern = /^\\d+$/;\n\t\t\tisValid = pattern.test(value) && isValid\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tonformSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tlet email = this.state.controls.email.value;\n\t\tlet password = this.state.controls.password.value\n\t\tthis.props.submitFormHandler(email, password, this.state.isSignUp);\n\t}\n\n\tisSinupChangeHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tlet isSignUp = this.state.isSignUp;\n\t\tthis.setState({isSignUp: !isSignUp})\n\t}\n\n\trender() {\n\t\tlet formElements = [];\n\t\tfor (let key in this.state.controls) {\n\t\t\tformElements.push({\n\t\t\t\tid: key,\n\t\t\t\tconfig: this.state.controls[key]\n\t\t\t})\n\t\t}\n\n\t\tlet form = (\n\t\t\t<form onSubmit={this.onformSubmit}> \n\t\t\t\t{\n\t\t\t\t\tformElements.map(field => (\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tkey={field.id}\n\t\t\t\t\t\t\tinputtype={field.config.elementType}\n\t\t\t\t\t\t\telementConfig={field.config.elementConfig}\n\t\t\t\t\t\t\tvalue={field.config.value}\n\t\t\t\t\t\t\tinvalid={!field.config.valid}\n\t\t\t\t\t\t\tshouldValidate={field.config.validation}\n\t\t\t\t\t\t\ttouched={field.config.touched} \n\t\t\t\t\t\t\tchange={this.inputChangeHandler.bind(this, field.id)}/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t<Button btnType=\"Success\" text=\"Submit\"/>\n\t\t\t</form>\n\t\t)\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t\t{ this.props.isAuth ? <Redirect to=\"/\"/> : null }\n\t\t\t  { this.props.loading ? <Spinner /> : null }\n\t\t\t\t{ form }\n\t\t\t\t<Button btnType=\"Danger\" \n\t\t\t\t\t\t\t\ttext={\"Switch To \" + (this.state.isSignUp ? 'Login' : 'Singup')}\n\t\t\t\t\t\t\t\tclick={this.isSinupChangeHandler.bind(this)}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tloading: state.auth.loading,\n\t\tisAuth: state.auth.token\n\t}\n}\n\n\nconst mapDispatchToprops = dispatch =>{\n\treturn {\n\t\tsubmitFormHandler: (email, password, isSignUp) => dispatch(actionCreators.formSubmitHandler(email, password, isSignUp))\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToprops)(Auth);"]},"metadata":{},"sourceType":"module"}