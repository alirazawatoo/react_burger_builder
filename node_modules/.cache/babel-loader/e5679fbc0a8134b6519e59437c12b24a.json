{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Documents/Projects/Burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-order';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      deliverMethod: '',\n      loading: false\n    };\n\n    this.cancelCheckoutHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice,\n        customer: {\n          name: 'Ali Raza',\n          address: 'Johar town lahore',\n          email: 'ali@g.com'\n        },\n        deliverMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n        console.log(response);\n      });\n    };\n\n    this.inputChangeHandler = event => {\n      console.log(event.target.value);\n    };\n  }\n\n  render() {\n    let spinner = null;\n\n    if (this.state.loading) {\n      spinner = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, spinner, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, \" Please enter your contact detials\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'name'),\n      value: this.state.name,\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'email'),\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"Your Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'phone'),\n      value: this.state.phone,\n      name: \"phone\",\n      placeholder: \"Your Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'street'),\n      value: this.state.address.street,\n      name: \"street\",\n      placeholder: \"Your Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      onChange: this.inputChangeHandler.bind(this, 'postalCode'),\n      value: this.state.address.postalCode,\n      name: \"postalCode\",\n      placeholder: \"Your PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      inputtype: \"select\",\n      type: \"select\",\n      onChange: this.inputChangeHandler.bind(this, 'deliveryMethod'),\n      value: this.state.address.deliverMethod,\n      name: \"deliveryMethod\",\n      placeholder: \"Your Delivery Method\",\n      options: [{\n        value: 'fastest',\n        name: 'Fastest'\n      }, {\n        value: 'slow',\n        name: 'Slowest'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      text: \"ORDER\",\n      click: this.cancelCheckoutHandler.bind(this),\n      btnType: \"Danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","ContactData","state","name","email","phone","address","street","postalCode","deliverMethod","loading","cancelCheckoutHandler","event","preventDefault","setState","order","ingredients","props","price","totalPrice","customer","post","then","response","history","push","console","log","inputChangeHandler","target","value","render","spinner","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../../components/UI/Button/Button';\nimport axios from '../../../axios-order';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n\tstate = {\n\t\tname: '',\n\t\temail: '',\n\t\tphone: '',\n\t\taddress: {\n\t\t\tstreet: '',\n\t\t\tpostalCode: ''\n\t\t},\n\t\tdeliverMethod: '',\n\t\tloading: false\n\t}\n\n\tcancelCheckoutHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ loading: true });\n\t\tconst order ={\n\t\t\tingredients: this.props.ingredients,\n\t\t\tprice: this.props.totalPrice,\n\t\t\tcustomer: {\n\t\t\t\tname: 'Ali Raza',\n\t\t\t\taddress: 'Johar town lahore',\n\t\t\t\temail: 'ali@g.com'\n\t\t\t},\n\t\t\tdeliverMethod: 'fastest'\n\t\t}\n\n\t\taxios.post('/orders.json', order).then(response => {\n\t\t\tthis.setState({loading: false});\n\t\t\tthis.props.history.push('/');\n\t\t\tconsole.log(response);\n\t\t})\n\t}\n\n\tinputChangeHandler = (event) => {\n\t\tconsole.log(event.target.value);\n\t}\n\n\trender () {\n\t\tlet spinner = null;\n\t\tif(this.state.loading){\n\t\t\tspinner = <Spinner />\n\t\t}\n\t\treturn (\n\t\t\t<div className={classes.ContactData}>\n\t\t\t\t{spinner}\n\t\t\t\t<h1> Please enter your contact detials</h1>\n\t\t\t\t<form>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'name')} \n\t\t\t\t\t\t\t\t value={this.state.name} name=\"name\" placeholder=\"Your Name\" />\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'email')} \n\t\t\t\t\t\t\t\t value={this.state.email} name=\"email\" placeholder=\"Your Email\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'phone')} \n\t\t\t\t\t\t\t\t value={this.state.phone} name=\"phone\" placeholder=\"Your Phone Number\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'street')} \n\t\t\t\t\t\t\t\t value={this.state.address.street} name=\"street\" placeholder=\"Your Street\"/>\n\t\t\t\t\t<Input inputtype=\"input\" type=\"text\" onChange={this.inputChangeHandler.bind(this, 'postalCode')} \n\t\t\t\t\t       value={this.state.address.postalCode} name=\"postalCode\" placeholder=\"Your PostalCode\"/>\n\t\t\t\t\t<Input inputtype=\"select\" type=\"select\" onChange={this.inputChangeHandler.bind(this, 'deliveryMethod')} \n\t\t\t\t\t\t\t\t value={this.state.address.deliverMethod} name=\"deliveryMethod\" placeholder=\"Your Delivery Method\"\n\t\t\t\t\t\t\t\t options={[{value: 'fastest', name: 'Fastest'}, {value: 'slow', name: 'Slowest'}]}/>\n\t\t\t\t\t<Button text=\"ORDER\" click={this.cancelCheckoutHandler.bind(this)} btnType=\"Danger\"/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}