{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { uilityContent } from '../utility';\nconst intialState = {\n  orders: [],\n  loading: false\n};\n\nconst trySubmitOrder = (state, action) => {\n  return uilityContent(state, {\n    loading: true\n  });\n};\n\nconst orderSubmitSuccess = (state, action) => {\n  let orders = [...state.orders, action.order];\n  return uilityContent(state, {\n    orders: orders\n  });\n};\n\nconst orderReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.TRY_SUBMIT:\n      return trySubmitOrder(state, action);\n\n    case actionTypes.ORDER_SUBMIT_SUCCESS:\n    case actionTypes.ORDER_SUBMIT_FAILURE:\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"sources":["/Users/developer/Documents/Projects/Burger-builder/src/Store/reducer/order.js"],"names":["actionTypes","uilityContent","intialState","orders","loading","trySubmitOrder","state","action","orderSubmitSuccess","order","orderReducer","type","TRY_SUBMIT","ORDER_SUBMIT_SUCCESS","ORDER_SUBMIT_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAApB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAON,aAAa,CAAEK,KAAF,EAAS;AAAEF,IAAAA,OAAO,EAAE;AAAX,GAAT,CAApB;AACA,CAFD;;AAIA,MAAMI,kBAAkB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC7C,MAAIJ,MAAM,GAAG,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,KAAzB,CAAb;AACA,SAAOR,aAAa,CAAEK,KAAF,EAAS;AAAEH,IAAAA,MAAM,EAAEA;AAAV,GAAT,CAApB;AACA,CAHD;;AAKA,MAAMO,YAAY,GAAG,CAACJ,KAAK,GAAGJ,WAAT,EAAsBK,MAAtB,KAAiC;AACrD,UAAOA,MAAM,CAACI,IAAd;AACC,SAAKX,WAAW,CAACY,UAAjB;AACC,aAAOP,cAAc,CAACC,KAAD,EAAQC,MAAR,CAArB;;AACD,SAAKP,WAAW,CAACa,oBAAjB;AAEA,SAAKb,WAAW,CAACc,oBAAjB;AACA;AACC,aAAOR,KAAP;AAPF;AASA,CAVD;;AAYA,eAAeI,YAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { uilityContent } from '../utility';\n\nconst intialState = {\n\torders: [],\n\tloading: false\n}\n\nconst trySubmitOrder = (state, action) => {\n\treturn uilityContent( state, { loading: true } )\n}\n\nconst orderSubmitSuccess = (state, action) => {\n\tlet orders = [...state.orders, action.order]\n\treturn uilityContent( state, { orders: orders } )\n}\n\nconst orderReducer = (state = intialState, action) => {\n\tswitch(action.type) {\n\t\tcase actionTypes.TRY_SUBMIT:\n\t\t\treturn trySubmitOrder(state, action)\n\t\tcase actionTypes.ORDER_SUBMIT_SUCCESS:\n\n\t\tcase actionTypes.ORDER_SUBMIT_FAILURE:\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default orderReducer;"]},"metadata":{},"sourceType":"module"}